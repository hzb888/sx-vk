<view class="content data-v-29c68ecb"><view class="data-v-29c68ecb"> Vuex可以用来做全局状态管理。 而此例子是演示将当前登录用户信息存入Vuex，以便于在其他页面中也能直接渲染或获取用户信息 </view><view class="data-v-29c68ecb" style="margin-top:10rpx"> 说明: <view class="data-v-29c68ecb" style="margin-top:10rpx"> 1、<text class="data-v-29c68ecb">$user</text> 对应 store/modules 目录下的js文件<view class="data-v-29c68ecb"/> 以下两个方式均可以对 vuex 数据进行操作<view class="data-v-29c68ecb"/><view class="data-v-29c68ecb"/> 方式一：<view class="data-v-29c68ecb"/> 获取 Vuex 数据：<view class="data-v-29c68ecb"/> vk.getVuex('$user.userInfo')<view class="data-v-29c68ecb"/> 更新 Vuex 数据：<view class="data-v-29c68ecb"/> vk.setVuex('$user.userInfo.avatar', avatar)<view class="data-v-29c68ecb"/><view class="data-v-29c68ecb"/> 方式二：<view class="data-v-29c68ecb"/> 获取 Vuex 数据：<view class="data-v-29c68ecb"/> vk.vuex.get('$user.userInfo')<view class="data-v-29c68ecb"/> 更新 Vuex 数据：<view class="data-v-29c68ecb"/> vk.vuex.set('$user.userInfo.avatar', avatar);<view class="data-v-29c68ecb"/> 触发 Vuex action：<view class="data-v-29c68ecb"/> vk.vuex.dispatch('$user/addFootprint', data);<view class="data-v-29c68ecb"/></view></view><view wx:if="{{a}}" class="data-v-29c68ecb" style="color:red;margin-top:10rpx;font-size:36rpx"> 当前登录用户：{{b}} <image class="data-v-29c68ecb" src="{{c}}" style="width:70rpx;height:70rpx;border-radius:50%" mode="aspectFill"></image></view><view class="data-v-29c68ecb" style="margin-top:20rpx"><input class="data-v-29c68ecb" type="text" placeholder="用户名/邮箱/手机号" value="{{d}}" bindinput="{{e}}"/><input class="data-v-29c68ecb" type="text" password="true" placeholder="密码" value="{{f}}" bindinput="{{g}}"/><button class="data-v-29c68ecb" type="default" bindtap="{{h}}">注册</button><button class="data-v-29c68ecb" type="default" bindtap="{{i}}">登录</button><button class="data-v-29c68ecb" type="default" bindtap="{{j}}">上传到云储存(并设置为头像)</button><button class="data-v-29c68ecb" type="default" bindtap="{{k}}">退出</button></view></view>